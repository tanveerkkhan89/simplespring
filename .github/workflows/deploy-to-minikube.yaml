name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker Image
        run: docker build -t "${{ secrets.DOCKER_USERNAME }}"/my-app:latest .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push "${{ secrets.DOCKER_USERNAME }}"/my-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}

      - name: Deploy to Minikube on VM
        run: |
          ssh -t -o ConnectTimeout=30 ${{ secrets.VM_SSH_USER }}@${{ secrets.VM_SSH_HOST }} << 'EOF'
            cd ~/my-app/
            minikube start  # Start Minikube if not already running

            # Apply the manifest file
            kubectl apply -f appspring-manifest.yaml

            # Verify deployment
            kubectl get pods
            kubectl get svc
          EOF
