name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3  # Use latest version

      - name: Cache Maven dependencies
        uses: actions/cache@v3  # Use latest version
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 17
        uses: actions/setup-java@v3  # Use latest version
        with:
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: Build Docker Image
        run: docker build -t "${{ secrets.DOCKER_USERNAME }}/appspring:latest" .

      - name: Push Docker Image to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
          docker push "${{ secrets.DOCKER_USERNAME }}/appspring:latest"

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy to Minikube on VM
        uses: appleboy/ssh-action@v0.1.10  # Ensure this is the desired version
        with:
          host: ${{ secrets.VM_SSH_HOST }}
          username: ${{ secrets.VM_SSH_USER }}
          key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
          port: 22
          script: |
            set -e  # Exit on error
            cd ~/appspring/
            minikube status || minikube start  # Start Minikube if not running
            
            # Upgrade Helm chart with the Docker image
            helm upgrade --install appspring ./helm-chart-directory \
              --set image.repository="${{ secrets.DOCKER_USERNAME }}/appspring" \
              --set image.tag=latest

            # Verify the deployment
            kubectl get pods
            kubectl get svc
